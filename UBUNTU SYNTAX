#|FORMAT : command_name [ -options ] <arguments>

#|ls
Menampilkan list file dalam folder

#|ls -a
Menampilkan list seluruh file termasuk hidden file pada folder
-a EQUAL TO all

#|ls -a -l EQUAL TO ls -al
Menampilkan list seluruh file termasuk hidden file dalan format panjang
-a EQUAL TO all
-l EQUAL TO long

#|ls /usr/share
Menampilkan daftar file dan direktori yang ada di dalam /usr/share direktori. 
/usr/share usr berada pada direktori / selayaknya home

#|ls -al /usr/share
Menampilkan daftar file dan direktori yang ada di dalam /usr/share direktori dan dengan format panjang

#|su 
Berganti user. Perintah ini diambil dari kata bahasa Inggris: switch user.

#|sudo 
(Super User Do, Switch User and the Do). Menjalankan perintah sebagai super user atau user lainnya.

#|cp 
Menyalin berkas atau direktori. Perintah ini diambil dari kata bahasa Inggris: copy.

#|mv
Mengganti nama; atau memindahkan posisi berkas atau direktori. Perintah ini diambil dari kata bahasa Inggris: move.

#|rm 
Menghapus berkas atau direktori. Perintah ini diambil dari kata bahasa Inggris: remove.
Menghapus direktori bisa dengan rm -r namaDirektori

#|mkdir 
Membuat direktori baru. Perintah ini diambil dari frase bahasa Inggris: make directory.

#|rmdir 
Menghapus direktori yang kosong. Perintah ini diambil dari frase bahasa Inggris: remove directory.

#|cat 
Melihat ataupun menggabungkan isi berkas. Perintah ini diambil dari kata bahasa Inggris: concatenate.

#|less
Melihat isi berkas per halaman teks.

#|touch
Mengubah waktu akses terakhir sebuah berkas (timestamp). Apabila berkas belum ada, perintah ini akan membuat berkas baru.

#|who
Melihat siapa saja yang sedang login di komputer.

#|echo
Menampilkan perintah atau teks yang diketikkan.

#|free
Menampilkan penggunaan dari memori nyata (RAM) dan memori virtual (SWAP).

#|top
Melihat semua program yang sedang berjalan, termasuk pemakaian prosesor dan RAM.

#|ps ux
Melihat daftar semua program yang sedang berjalan/digunakan beserta nomor prosesnya (PID).

#|du
Melihat besarnya ukuran direktori yang telah digunakan.

#|df -h
#|df -i
Melihat besar ukuran partisi disk dan ruang yang tersisa.
Opsi -h EQUAL TO human readable
Opsi -i EQUAL TO inode


#|date
Menampilkan tanggal dan jam.

#|exit
Keluar (logout) dari user yang sedang digunakan. Bisa juga dengan menekan Ctrl + D.

#|--help
Ini adalah opsi yang umum dalam menampilkan bantuan dari sebuah perintah. Ditulis di akhir perintah dengan jeda satu spasi. Contohnya: ls --help

#|man
Menampilkan manual dari sebuah perintah. Cara penggunaannya dengan mengetikkan nama perintah yang dicari tahu setelah perintah man.
  Contohnya : man man (Menampilkan tutorial syntax man)
              man useradd (Menampilkan tutorial syntax dan opsi useradd)

#|pwd
(Print Working Directory). Perintah ini akan menampilkan path lengkap direktori kerja Anda saat ini.

#|/home/ubuntu/.bash_history EQUAL TO history
riwayat dari perintah-perintah yang pernah dieksekusi sebelumnya

#|!297
Menjalankan perintah yang serupa yang pernah dijalankan pada history command ke-297

#|tou+TAB EQUAL TO touch
Auto Command completion. Ada ungkapan bahwa untuk mahir pada bash, yang perlu diperhatikan adalah kata “MANTAB”, yaitu perintah ‘man’ dan tombol TAB.

#|nano [NAMA FILE] EQUAL TO pico [NAMA FILE]
Mengedit isi berkas. Jika berkas belum ada, nano akan membuat berkas baru.
  Analogi yang bisa digunakan untuk memahami perbedaan antara pico dan nano adalah:
  Pico adalah seperti sepeda yang hanya memiliki satu gigi dan rem. Pico bisa digunakan untuk berjalan-jalan di jalan yang datar dan tidak terlalu ramai, tetapi tidak bisa digunakan untuk bersepeda di jalan yang menanjak, menurun, atau berliku-liku.
  Nano adalah seperti sepeda yang memiliki beberapa gigi dan rem. Nano bisa digunakan untuk berjalan-jalan di jalan yang datar dan tidak terlalu ramai, tetapi juga bisa digunakan untuk bersepeda di jalan yang menanjak, menurun, atau berliku-liku. Nano juga memiliki lampu, bel, dan klakson yang bisa digunakan untuk memberi sinyal atau peringatan.

#|free
Menampilkan ukuran memori

#|sudo apt update
Memperbarui daftar package yang ada di komputer Anda sesuai dengan daftar sumber yang telah didefinisikan di dalam berkas /etc/apt/sources.list dan direktori /etc/apt/sources.list.d/ Kemudian kita akan mendapatkan informasi apakah ada package yang lebih baru atau tidak.

#|apt list --upgradable
Melihat daftar list informasi package yang lebih baru

#|sudo apt upgrade
Memperbarui semua package

#|sudo apt install neofetch
Memasang aplikasi yang diinginkan, bisa menggunakan perintah apt
  Neofetch menampilkan informasi tentang sistem operasi, versi kernel, nama host, distribusi Linux yang digunakan, versi desktop environment, resolusi layar, pemrosesan CPU, RAM yang tersedia, serta informasi lainnya.

#|shutdown
Mematikan shell

#|rm -rf /
Menghapus semua isi folder utama /
WARNING : DANGEROUS! 

#|id
Menampilkan UID (User ID) dan informasi umum untuk user saat ini

#|id [username]
Menampilkan UID dan informasi umum untuk [username]

#|ps -aux
Menampilkan proses yang sedang dijalankan oleh sistem beserta informasi user yang menjalankannya.
ps EQUAL TO process status
a EQUAL TO menampilkan proses dari semua pengguna
u EQUAL TO menampilkan format berorientasi pengguna yang memberikan informasi rinci tentang prose
x EQUAL TO menampilkan proses tanpa terminal pengendali

#|cat home/ubuntu/etc/passwd
Direktori tersebut adalah database berbentuk file untuk pemetaan UID. Setiap baris pada file tersebut memuat informasi mengenai satu user.
[1]ruby:[2]x:[3]1001:[4]1001:[5]G. Ruby,04,89858451,-:[6]/home/ruby:[7]/bin/bash
[1] Username. Dalam hal ini adalah "ruby".
[2] Password dari user yang awalnya disimpan di sini dalam bentuk sudah terenkripsi. Karena alasan keamanan (file /etc/passwd bisa dilihat oleh semua user), maka password dipindah ke dalam file /etc/shadow yang akan dibahas di poin berikutnya. Oleh karenanya, bagian ini harus selalu terisi dengan karakter "x".
[3] User ID (UID). Dalam hal ini adalah "1001".
[4] Group ID (GID) dari grup utama (primary group) yang dimiliki oleh user ini. Lebih lengkap mengenai group ada pada file /etc/group. Bagian ini diisi dengan "1001".
[5] User ID Info. Bisa berisi nama lengkap, nomor ruangan, nomor handphone, dan sebagainya. Bagian ini diisi dengan: "G. Ruby (nama lengkap), 04 (nomor ruangan), 89858451 (nomor HP untuk kerja), - (nomor rumah, diisi '-')".
[6] Home directory dari user. Ini adalah direktori awal ketika shell dimulai dan berisi data (berkas-berkas yang dimiliki oleh user), pengaturan, atau konfigurasi dari user tersebut. Bagian ini diisi dengan "/home/ruby".
[7] Shell yang dijadikan default untuk user ini. Dalam hal ini adalah bash dengan lokasi "/bin/bash". Untuk tipe system user, umumnya menggunakan /sbin/nologin apabila tidak membutuhkan login secara interaktif sehingga kita tidak bisa masuk atau log in ke user tersebut.

#|sudo adduser namaUser01
Menambah user dan menghasilkan direktori home untuk user yang dibuat. Langsung diminta untuk mengisi informasi tambahan berupa New password, Full Name, Room Number, Work Phone, Home Phone, dan Other.

#|sudo useradd namaUser02
Menambah user saja tanpa menghasilkan direktori home untuk user yang dibuat dan tanpa diminta untuk mengisi informasi tambahan.

#|sudo userdel namaUser01
Menghapus user
Opsi -r untuk sekalian menghapus home directory dari user tersebut
Sehingga jadinya :sudo userdel -r namaUser01

#|cat /home/ubuntu/etc/group
Direktori tersebut berisi database informasi GID. Tiap satu baris file memuat informasi sebuah group.
[1]adm:[2]x:[3]4:[4]syslog,haris
[1] Group name. Nama dari group, dalam hal ini adalah "adm".
[2] Group password. Secara umum sebenarnya password ini sudah tidak digunakan. Jadi, bagian ini terisi karakter "x".
[3] Group ID (GID). Setiap user harus diberi group ID. Ini tertera juga pada berkas /etc/passwd. Dalam hal ini, group ID-nya adalah "4".
[4] Group list. Daftar user yang menjadi member pada group ini, di mana setiap user dipisahkan berdasarkan koma ",". Di sini, user yang menjadi member dari group bernama adm adalah syslog dan haris.

#|sudo groupadd namaGroup01
Membuat grup baru dengan nama namaGroup01

#|sudo usermod -a -G namaGroup01 namaUser01
Menambahkan user ke sebuah grup
-a EQUAL TO append -> Bertujuan untuk user yang ingin kita tambahkan ke sebuah group tidak dihapus dari group lain
-G EQUAL TO Grup -> menyebutkan nama grup yang akan kita tambahkan

#|sudo groupdel namaGroup01
Menghapus sebuah group.

#|mkfs -t ext3 -b 4096 /dev/sda1
Perintah tersebut akan memformat /dev/sda1 dengan tipe ext3 yang tiap block-nya berukuran 4096 byte (4 KB)

#|dd if=/dev/zero of=virtualdisk.img bs=1M count=1000
Membuat sebuah file image bernama virtualdisk.img dengan block ukuran 1 MB berjumlah 1000. 
dd berguna menyalin sebuah disk menjadi file image (disk image) atau sebaliknya.
if=/dev/zero 
  if=<nama file> adalah file masukan. Khusus file zero, adalah file binary yang khusus menghasilkan byte nol terus menerus
of=virtualdisk.img
  File keluaran, yaitu tujuan data yang disalin.
bs EQUAL TO block size
count EQUAL TO jumlah total yang ditulis

### Setelah membuat file image 1 GB, kita perlu mount alias memasang/mengaitkannya ke sistem operasi dengan memanfaatkan loop device yang sudah tersedia di sistem operasi Linux. Loop device sering kali digunakan untuk mengaitkan cdrom ke dalam sistem operasi Linux. Loop device memiliki path /dev/loopN (loop0, loop1, loop2, dst).

#|losetup
Menemukan berbagai loop device yang sedang digunakan oleh sistem operasi. Jika loop device sedang digunakan, artinya Anda takkan bisa melakukan mount. Oleh karena itu, pilihlah loop device lain. 

#|sudo losetup loop0 virtualdisk.img
Mount (Memasang) file image ke sistem operasi

#|lsblk
Mendapatkan informasi disk yang berada pada sistem saat ini.
Contoh hasil syntax lsblk :
NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS

loop0     7:0    0 1000M  0 loop

sda       8:0    0   12G  0 disk

├─sda1    8:1    0 11,9G  0 part /

├─sda14   8:14   0    4M  0 part

└─sda15   8:15   0  106M  0 part /boot/efi

[Nama]
[Keterangan]
loop0
Memiliki ukuran 1000 MB dengan tipe loop device.
sda
Memiliki ukuran 12 GB dengan tipe disk fisik (hard disk).
sda1
Memiliki ukuran 11,9 GB dengan tipe partisi serta di-mount ke /.
sda14
Memiliki ukuran 4 MB dengan tipe partisi.
sda15
Memiliki ukuran 106 MB dengan tipe partisi serta di-mount ke /boot/efi.

#|sudo blkid
Mendapatkan informasi terkait nama partisi atau volume, label partisi, UUID, ukuran block, serta tipe filesystem.

#|sudo fdisk -l /dev/sda
WARNING! : Penggunaan fdisk dengan menggunakan sudo dapat mengubah/menghapus/merusak data atau instalasi di komputer Anda.
Dapat digunakan untuk melihat, membuat, menghapus, memodifikasi, mengubah ukuran, menyalin, dan memindahkan partisi pada sebuah hard disk.
  Command tersebut bertujuan mengetahui jumlah byte, sektor, model disk, ukuran sektor, label dari disk, identitas disk, path disk, awal dan akhir sektor sebuah partisi, ukuran partisi, serta jenis filesystem.

#|sudo fdisk /dev/loop0
Perintah untuk memanipulasi tabel partisi pada file atau perangkat loop dengan menggunakan utilitas fdisk.

#|sudo parted /dev/sda
Perintah untuk memanipulasi tabel partisi pada file sda dengan menggunakan utilitas parted.

#|sudo parted /dev/loop0
Perintah untuk memanipulasi tabel partisi pada file atau perangkat loop dengan menggunakan utilitas parted.

#|sudo mkfs.ext4 /dev/loop0p1
mkfs EQUAL TO make filesystem
/dev/loop0p1 
  Mengakses perangkat /dev/loop0 dengan lebih spesifik pada partisi yang ke-1.

#|file virtualdisk.img
#|file *
#|file gambar.png
Mengidentifikasi jenis file
* EQUAL TO wildcard untuk menampilkan semua yang ada pada direktori 
### Perintah file tidak bisa dibohongi oleh penggantian ekstensi. Hal ini bisa dilakukan karena setiap tipe file itu ada pengenalnya (pola).

#|stat virtualtdisk.img
#|stat -f virtualdisk.img
Memberikan informasi seperti ukuran file, izin akses, ID user dan ID group, waktu akses, serta waktu lahir file. 
-f EQUAL TO filesystem
  Untuk melihat filesystem yang digunakan pada file tersebut, kita bisa menggunakan perintah stat -f diikuti nama file yang dimaksud.

#|ls -i
Selain perintah stat, kita juga bisa melihat nilai inode dari sebuah file dengan perintah ls -i

#|sudo losetup -d /dev/loop0
Melepas kait yang terhubung

### https://dicoding-web-img.sgp1.cdn.digitaloceanspaces.com/original/academy/dos:28fee9f2b37883f911ceb31f956740fa20220907142445.png
Directory
Isi

bin
Program atau binary yang digunakan oleh sistem operasi.

boot
Berbagai file yang diperlukan untuk proses boot.

dev
Berbagai file perangkat (device driver) khusus yang digunakan oleh sistem untuk mengakses perangkat.

etc
Konfigurasi sistem.

home	
Home directory untuk user tertentu dari sistem dan terdiri dari file individual.

lib
Berbagai kernel module dan library yang digunakan oleh sistem.

media
Mount point untuk media removable.

mnt
Mount point sementara filesystem.

opt
Paket software/aplikasi/binary tambahan.

sbin
Program atau binari untuk administrasi sistem yang hanya dijalankan oleh administrator.

tmp
Ruang yang dapat ditulisi untuk berbagai file sementara. File yang belum diakses, diubah, atau dimodifikasi selama 10 hari akan dihapus dari directory ini secara otomatis. Directory sementara lain adalah /var/tmp, di mana file yang belum diakses, diubah, atau dimodifikasi lebih dari 30 hari akan dihapus secara otomatis.

usr
Program/aplikasi yang terpasang, shared library, file/data program yang bersifat read-only. Di dalamnya terdapat sub-directory penting seperti berikut.
/usr/bin: perintah/command untuk pengguna.
/usr/sbin: perintah/command untuk administrasi sistem.
/usr/local: program/aplikasi yang disesuaikan secara lokal.

var
Data variabel khusus untuk sistem yang harus tetap ada agar sistem dan program bisa bekerja dengan semestinya. Isinya berupa file yang berubah secara dinamis, seperti database, cache, log, dokumen spooled printer, dan konten website.

### Di sistem operasi Linux, saat kita ingin melihat daftar directory dan file, simbol single dot "./" atau "." menandakan current directory alias direktori saat ini, sedangkan simbol double dot "../" atau ".." merepresentasikan parent directory.
  Penggunaan single dot dan double dot juga bisa digunakan untuk memanggil sebuah berkas. Jika menjalankan perintah ./script.sh, berarti kita menjalankan shell script bernama script.sh yang ada di current directory atau direktori saat ini. Sementara itu, bila menjalankan perintah ../script.sh, itu artinya kita menjalankan shell script yang berada di satu directory sebelumnya. Nanti kita akan belajar soal shell scripting di modul berikutnya.

#|ln
Membuat dua buah file saling terhubung

#|df -h | grep "/$"
menampilkan informasi tentang penggunaan disk pada partisi root (/) di Linux. Perintah tersebut terdiri dari dua bagian yang dipisahkan oleh simbol | (pipe), yaitu:

df -h: perintah ini digunakan untuk menampilkan informasi tentang penggunaan disk pada semua partisi yang terpasang, dengan menggunakan satuan human-readable seperti KB, MB, GB, dan sebagainya1
grep “/":perintah ini digunakan untuk mencari dan menampilkan baris yang mengandung pola "/” dari output perintah sebelumnya. Pola “/$” adalah regular expression yang berarti “akhir dari baris yang mengandung karakter /”. Karakter / sendiri adalah simbol untuk partisi root23

Dengan menggunakan simbol | (pipe), output dari perintah df -h akan dijadikan input untuk perintah grep “/$”, sehingga hanya akan menampilkan baris yang berisi informasi tentang partisi root.

### #|
$ df -h | grep "/$"

/dev/mapper/vg-root  309G  185G  (BOLD)108G  64% /
$ dd if=/dev/zero of=virtualdisk.img bs=1M count=1000
1000+0 records in
1000+0 records out
1048576000 bytes (1,0 GB, 1000 MiB) copied, 0,474332 s, 2,2 GB/s
$ df -h | grep "/$"   
/dev/mapper/vg-root  309G  186G  (BOLD)107G  64% /
$ cp virtualdisk.img virtualdiskbackup.img  
$ df -h | grep "/$"
/dev/mapper/vg-root  309G  187G (BOLD)106G  64% /
$ ln virtualdisk.img virtualdisklink.img
$ df -h | grep "/$"                      
/dev/mapper/vg-root  309G  187G  (BOLD)106G  64% /
$ ls -l virtualdisk*
-rw-rw-r-- 1 x z 1048576000 Agu 10 14:23 virtualdiskbackup.img
-rw-rw-r-- 2 x z 1048576000 Agu 10 14:23 virtualdisk.img
-rw-rw-r-- 2 x z 1048576000 Agu 10 14:23 virtualdisklink.img
  Perhatikan pada bagian-bagian yang ditandai tebal (bold). Saat kita melakukan proses copy (cp), maka ukuran dari penyimpanan berkurang 1 GB. Kemudian, ketika kita melakukan proses link (ln), ternyata ukurannya tidak berkurang. Hanya saja, di bagian akhir ada yang ditandai tebal pada angka 2 yang berarti berkas virtualdisk.img dan virtualdisklink.img memiliki link. Itu artinya, dua berkas tersebut sebetulnya mengacu pada satu tempat yang sama. Praktik semacam ini disebut sebagai hard link.

#|ln -s
Menggunakan soft link atau symbolic link. Di sistem operasi Windows, soft link ini seperti pintasan (shortcut). Begitu juga dengan di Linux, sistem akan menginformasikan bahwa berkas baru yang dibuat adalah sebuah pintasan saja.

### #|
$ ls -l virtualdisk*
-rw-rw-r-- 1 o o 1048576000 Agu 10 14:23 virtualdiskbackup.img
-rw-rw-r-- 2 o o 1048576000 Agu 10 14:23 virtualdisk.img
-rw-rw-r-- 2 o o 1048576000 Agu 10 14:23 virtualdisklink.img
$ ln -s virtualdiskbackup.img virtualdiskshortcut.img
$ ls -l virtualdisk*                                  
-rw-rw-r-- 1 o o 1048576000 Agu 10 14:23 virtualdiskbackup.img
-rw-rw-r-- 2 o o 1048576000 Agu 10 14:23 virtualdisk.img
-rw-rw-r-- 2 o o 1048576000 Agu 10 14:23 virtualdisklink.img
lrwxrwxrwx 1 o o         21 Agu 10 14:38 virtualdiskshortcut.img -> virtualdiskbackup.img

### #|
Latihan Mengelola Directory dan File
Sudah siap? Yuk, langsung saja kita mulai.

1. Hal pertama yang perlu Anda lakukan adalah menginstal web server NGINX.
sudo apt-get install nginx
2. Masuk ke directory tempat kita akan membuat halaman web sederhana, yakni /var/www/html/.
cd /var/www/html/
3. Lihat apa saja berkas yang ada di lokasi tersebut.
ls
4. Anda akan melihat bahwa hanya ada satu file bernama index.nginx-debian.html (atau index.html) di sana. Mari kita lihat seperti apa isinya.
 cat index.nginx-debian.html
5. Oke, setelah diselidiki, ini adalah halaman default dari NGINX yang menampilkan teks "Welcome to nginx!". Mari kita buktikan. 
6. Pastikan web server NGINX dalam keadaan aktif.
sudo systemctl status nginx
Apabila muncul error "System has not been booted with systemd as init system", jalankan dengan perintah "sudo service nginx start". Begitu juga dengan perintah systemctl yang lain. 
7. Pastikan menampilkan status active. Jika tidak, jalankan perintah ini.
sudo systemctl start nginx
sudo systemctl enable nginx
8. Selanjutnya, buka browser Anda dan ketikkan localhost atau localhost:80. Seperti ini hasilnya.
dos:c963904e63dc1c065ab826d2a3d4072c20220822113245.png
9. Persis seperti isi file dari index.nginx-debian.html, bukan? Namun, kita tak memerlukan file ini. Jadi, silakan hapus saja.
sudo rm index.nginx-debian.html
10. Buatlah dua buah directory yang akan menampung berkas web server untuk domain baru kita.
sudo mkdir example1.com example2.com
11. Perika hasilnya menggunakan perintah tree.
tree
Seperti ini hasilnya.
├── example1.com

└── example2.com
2 directories, 0 files

12. Sebelum lanjut, pastikan Anda masih berada di directory /var/www/html dengan perintah pwd.
pwd
13. Selanjutnya, mari kita buat file html di kedua directory. Gunakan perintah touchagar bisa membuat beberapa file sekaligus.
sudo touch example1.com/index.html example2.com/index.html
14. Lihat lagi struktur directory saat ini yang Anda miliki.
tree
Begini output-nya.
├── example1.com

│   └── index.html

└── example2.com

    └── index.html
2 directories, 2 files

15. Terlihat bahwa kini Anda memiliki 2 directory dan 2 file. Berikutnya, Anda perlu mengubah isi file index.html pada masing-masing directory. Untuk directory example1.com, kita akan gunakan teks editor bernama Nano.
sudo nano example1.com/index.html
16. Tambahkan kode ini ke file tersebut.
<html>
<h1>Selamat datang di halaman www.example1.com</h1>
</html>
17. Lalu, simpan dengan CTRL+X, tekan Y, dan Enter.
18. Lanjutkan buat file html untuk directory example2.com.
sudo nano example2.com/index.html
19. Tambahkan kode ini ke file tersebut.
<html>
<h1>Selamat datang di halaman www.example2.com</h1>
</html>
20. Lalu, simpan dengan CTRL+X, tekan Y, dan Enter.
21. Oke, urusan kita sudah beres. Perubahan yang kita lakukan takkan serta-merta berubah begitu saja pada web server NGINX. Maka dari itu, kita perlu restart NGINX terlebih dahulu dengan perintah ini.
sudo systemctl restart nginx
22. Setelah itu, coba buka browser Anda. 
Buka http://localhost/example1.com/index.html untuk melihat tampilan web example1.com.
dos:b68b949997a5538a920f6a987fd4f5a320220822123731.png
Buka http://localhost/example2.com/index.html untuk melihat tampilan web example2.com.
dos:235b1ee375d2287f680f8c05ed7864ec20220822123702.png
23. Dua tampilan web tersebut persis seperti yang kita tuliskan pada file index.html di masing-masing directory.
24. Mantap! Anda sudah sukses menyelesaikan latihan ini. Selanjutnya, mari kita hapus directory dan file yang sudah dibuat.
sudo rm -r example1.com/ example2.com/
25. Pastikan semua directory dan file berhasil terhapus dengan menjalankan perintah tree.
tree

### https://dicoding-web-img.sgp1.cdn.digitaloceanspaces.com/original/academy/dos:be09be4c3f003637343d0a221038500120220819155920.jpeg 
le type
Nomor 1 pada gambar di atas menandakan suatu file type atau jenis file. Dalam kasus ini, file bernama arsip.txt memiliki jenis file "-", yang artinya ia merupakan file biasa. Berikut adalah berbagai karakter jenis file beserta artinya yang ada di Linux.
Karakter

Keterangan

-

File biasa

d

Directory

l

Symbolic link atau soft link (shortcut file)


b

Block device (seperti /dev/sda1)

c

Character device (perangkat lain yang bukan perangkat penyimpanan, seperti /dev/mouse, /dev/ttyS0, dll)

p

Pipe (komunikasi antarproses dalam sistem operasi)

s

Socket (komunikasi antarproses dalam sistem operasi)


File permission
Nomor 2 merupakan file permission alias perizinan/hak akses untuk file. File permission terdiri dari 9 karakter yang dikelompokkan menjadi 3 bagian, yaitu tiga karakter pertama ditujukan untuk user pemilik file (owner), tiga karakter kedua ditujukan untuk group pemilik file, dan tiga karakter ketiga untuk user di luar owner dan group pemilik file.

Dalam kasus kita (lihat lagi gambar di atas), berikut adalah penjelasannya.

Tiga karakter pertama -> Owner
Tiga karakter kedua -> Group
Tiga karakter ketiga -> Other

Link count
Nomor 3 mengacu pada link count (jumlah link atau hard link) yang dimiliki. Dalam kasus ini hanya 1.

User/Owner
Nomor 4 menampilkan nama dari user pemilik file atau owner. Dalam hal ini, nama dari user pemilik file-nya adalah haris.

Group
Nomor 5 menampilkan nama dari group pemilik file. Dalam kasus kita, nama group-nya adalah haris.

File size
Nomor 6 merupakan ukuran dari file dalam satuan byte. Bisa Anda lihat, ukuran dari file arsip.txt adalah 64 byte.

Last modified date
Nomor 7 mengacu pada tanggal terakhir ketika file dimodifikasi. Dalam kasus kita, tanggal terakhir ketika user bernama haris memodifikasi berkas arsip.txt adalah Jul 22 (22 Juli).

Last modified time
Nomor 8 menampilkan kapan waktu terakhir file dimodifikasi. Dalam kasus ini, user bernama haris terakhir kali memodifikasi berkas arsip.txt pada pukul 11:15.

Nama file
Terakhir, nomor 9 mendeskripsikan nama dari file. Sudah jelas bahwa nama file yang tertera adalah arsip.txt

### FORMAT : chmod [option] [ugoa][+-=][rwx] namafile
u -> user (atau owner) pemilik file.
g -> group pemilik file.
o -> other (user di luar owner dan group) pemilik file.
a -> all, termasuk user, group, dan other.
+ -> menambahkan permission. 
- -> menghilangkan permission.
= -> menambahkan dan menghilangkan permission.
r -> read (membaca file).
w -> write (mengedit file).
x -> execute (mengeksekusi file).

#|chmod u+x latihan1
Mengubah permission yang dimiliki oleh berkas latihan1, yakni dengan menambahkan hak akses x (eksekusi) ke user pemilik file.

### FORMAT : chmod [option] kode_octal file
 r = 4, w = 2, dan x = 1
Angka tersebut sebetulnya didasari dari penomoran dalam biner, berikut kita bahas secara singkat. 
Format permission adalah rwx.
Jika ingin memberikan permission untuk nilai r (read) saja, penulisan dalam binernya adalah 100 (dalam desimal artinya angka 4).
Jika ingin memberikan permission untuk nilai w (write) saja, penulisan dalam binernya adalah 010 (dalam desimal artinya angka 2).
Jika ingin memberikan permission untuk x (execute) saja, penulisan dalam binernya adalah 001 (dalam desimal artinya angka 1).
Ketika digabungkan, maka penulisannya pun mengombinasikan angka-angka tersebut. Sebagai contoh, jika ingin memberikan permission untuk semua aspek rwx (read, write, dan execute), penulisan dalam binernya adalah 111 (dalam desimal artinya angka 7).

#|chmod 744 latihan1
Menambahkan akses r, w, dan x ke user pemilik file; sedangkan group dan other (user lain) hanya akses r.

### FORMAT : chown user_baru:group_baru namafile
#|sudo chown ruby:ruby latihan1
Berikut contoh penggunaan perintah chown untuk mengganti pemilik file latihan1 dari haris(default di materi) ke ruby.

### FORMAT : chgrp group_baru namafile
#|sudo chgrp ruby latihan1
Contoh penggunaan perintah chgrp untuk mengganti group pemilik file latihan1 dari haris ke ruby.


### DIBAWAH INI LINUX SERVICES
#|init 6
Me-reboot sistem

#|systemctl
Menampilkan unit dengan kondisi loaded dan active

#|systemctl -t help
Menampilkan tipe unit yang terseida untuk mengelola tiap unit.

#|systemctl list-units --type=service
Daftar semua service yang dimiliki oleh sistem dengan kondisi aktif.

#|systemctl list-units --type=service --all
Daftar semua service yang dimiliki oleh sistem.

#|systemctl list-units --type=service --state=inactive
#|systemctl list-units --type=service --state=exited
Daftar semua service yang dimiliki oleh sistem  dan difilter berdasarkan nilai pada kolom LOAD,ACTIVE,atau SUB.

#|systemctl status <namaunit.tipe>
#|systemctl status sshd.service
Untuk melihat status dari salah satu unit secara spesifik, kita bisa menggunakan perintah systemctl status namaunit.tipe. Jika tipe unit yang dimaksud tidak ditemukan, systemctl akan menampilkan status dari unit service (jika unit service tersebut ada)

### Notes for #|systemctl status sshd.service
● ssh.service - OpenBSD Secure Shell server

     Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)

     Active: active (running) since Thu 2022-08-04 09:03:51 UTC; 17h ago

       Docs: man:sshd(8)

             man:sshd_config(5)

   Main PID: 788 (sshd)

      Tasks: 1 (limit: 4610)

     Memory: 7.4M

     CGroup: /system.slice/ssh.service

             └─788 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups


Aug 04 09:04:39 hyperv-nenggala sshd[969]: Connection closed by authenticating user haris 192.168.1.7 port 51840 [preau>

Aug 04 09:04:41 hyperv-nenggala sshd[971]: Accepted password for haris from 192.168.1.7 port 51842 ssh2

Aug 04 09:04:41 hyperv-nenggala sshd[971]: pam_unix(sshd:session): session opened for user haris by (uid=0)

Aug 04 09:04:42 hyperv-nenggala sshd[971]: pam_unix(sshd:session): session closed for user haris

Aug 04 09:04:56 hyperv-nenggala sshd[1120]: Accepted publickey for haris from 192.168.1.7 port 51844 ssh2: RSA SHA256:8>

Aug 04 09:04:56 hyperv-nenggala sshd[1120]: pam_unix(sshd:session): session opened for user haris by (uid=0)

Aug 04 12:24:35 hyperv-nenggala sshd[2601]: Accepted publickey for haris from 192.168.1.7 port 51824 ssh2: RSA SHA256:8>

Aug 04 12:24:35 hyperv-nenggala sshd[2601]: pam_unix(sshd:session): session opened for user haris by (uid=0)

Aug 05 01:17:22 hyperv-nenggala sshd[3680]: Accepted publickey for haris from 192.168.1.7 port 51794 ssh2: RSA SHA256:8>

Aug 05 01:17:22 hyperv-nenggala sshd[3680]: pam_unix(sshd:session): session opened for user haris by (uid=0)

Bagian 
Penjelasan

Loaded
Keterangan yang menjelaskan apakah service sudah dimuat ke memory.

Active
Keterangan yang menjelaskan apakah service sudah berjalan. Jika berjalan, ia akan menampilkan informasi durasinya.

Main PID
PID atau Process ID utama dari service, termasuk juga nama perintahnya.

Status
Terletak di paling bawah, seperti log. Bagian ini merupakan informasi tambahan terkait service.

Keyword
Penjelasan

loaded
File konfigurasi telah terproses.

active (running)
Berjalan dengan satu atau beberapa proses lainnya yang berkelanjutan.

active (exited)
Berhasil menyelesaikan satu kali konfigurasi.

active (waiting)
Berjalan, tetapi menunggu sebuah event (kejadian/peristiwa tertentu).

inactive
Tidak berjalan.

enabled
Dijalankan saat boot.

disabled
Tidak dijalankan saat boot.

static
Tidak dapat diaktifkan, tetapi dapat dimulai oleh unit lain yang diaktifkan
secara otomatis.
### Notes END

#|systemctl is-active sshd.service
Memverifikasi sebuah service yang sedang aktif dan berjalan (active - running)

#|systemctl is-enabled <namaunit.service>
#|systemctl is-enabled sshd.service
Memeriksa apakah service tersebut dijalankan otomatis saat sistem dimulai. 

#|systemctl is-failed sshd.service
Memverifikasi apakah service gagal dijalankan saat sistem dimulai

#|systemctl --failed --type=service
Melihat semua service yang tidak berjalan (failed)

#|systemctl start apache2.service
Menjalankan service bernama apache (web service) dengan nama unit apache2.

#|systemctl enable <namaunit.service>
#|systemctl enable apache2.service
Mengaktifkan service bernama apache dengan nama unit apache2.

#|systemctl stop apache2.service
Menghentikan service apache2

#|systemctl disable apache2.service
Mematikan service apache2

### Memulai ulang service 
Saat kita berurusan dengan sistem operasi Linux, ada beberapa kondisi yang memerlukan kita untuk memulai ulang atau me-restart service yang digunakan. Misalnya, jika kita melakukan perubahan pada file konfigurasi milik sebuah service atau service yang sedang berjalan tetiba stuck, kita perlu memulai ulang service tersebut. Kejadian-kejadian seperti ini akan sangat sering ditemui dalam perjalanan Anda sebagai seorang Linux System Administrator.

#|systemctl restart <namaunit>
Memulai ulang service bernama sshd

#|sudo apt install net-tools
kita juga dapat menggunakan net-tools untuk menjalankan perintah ifconfig dan route yang umumnya digunakan untuk pengaturan network interface dan route table.

#|ip
#|ip address
#|ip addr
#|ip a
Mengetahui IP address yang sudah diset pada komputer

#|ip route
Mengetahui route table yang digunakan

#|ip addr show interface
#|ip addr show eth0
Melihat IP address dan informasi perangkat jaringan dari salah satu interface saja
$ ip addr show eth0

2: eth0: <BROADCAST,MULTICAST,[1]UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000

    [2]link/ether 00:15:5d:01:08:02 brd ff:ff:ff:ff:ff:ff

    [3]inet 192.168.1.66/24 brd 192.168.1.255 scope global eth0

       valid_lft forever preferred_lft forever

    [4]inet6 2001:448a:2083:d84e:215:5dff:fe01:802/64 scope global tentative dynamic mngtmpaddr noprefixroute

       valid_lft 232709sec preferred_lft 146309sec

    [5]inet6 fe80::215:5dff:fe01:802/64 scope link

       valid_lft forever preferred_lft forever
[1]Interface eth0 memiliki status UP yang artinya ia sedang aktif.
[2]Pada baris link/ether, terdapat informasi perihal MAC address yang ada pada perangkat jaringan. Umumnya, kita dapat mengetahui MAC address dari interface yang terhubung ke setiap jaringan, baik secara fisik dicetak pada network card (kartu jaringan) atau tertulis secara virtual pada bagian konfigurasi jaringan (bila kita menggunakan aplikasi semacam VirtualBox atau VMware).
[3]Baris inet menunjukkan IPv4 address, prefix jaringan, dan scope-nya. Scope global artinya bisa digunakan secara normal atau bisa diakses dari luar/publik.
[4]Baris inet6 menunjukkan IPv6 address, prefix jaringan, dan scope-nya. Scope global artinya bisa digunakan secara normal atau bisa diakses dari luar/publik.
[5]Baris inet6 ini menunjukkan IPv6 address, prefix jaringan, dan scope-nya. Scope link berarti hanya dapat digunakan untuk komunikasi internal.

### Skema pemberian nama network interface
Skema 1: nama berdasarkan nomor indeks yang disediakan Firmware atau BIOS untuk perangkat On-Board (contoh: eno1). Skema ini akan digunakan jika informasi dari firmware atau BIOS dapat diterapkan dan tersedia. Jika tidak, diarahkan menggunakan skema 2.
Skema 2: nama berdasarkan nomor indeks yang disediakan Firmware atau BIOS untuk perangkat PCI Express Hotplug (contoh: ens1). Skema ini akan digunakan jika informasi dari firmware atau BIOS dapat diterapkan dan tersedia. Jika tidak, diarahkan menggunakan skema 3.
Skema 3: nama berdasarkan lokasi fisik konektor perangkat keras (contoh: enp2s0). Skema ini akan diterapkan bila memungkinkan. Jika tidak, diarahkan skema 5.
Skema 4: nama berdasarkan MAC address dari network interface (contoh: enx78e7d1ea46da). Skema ini tidak digunakan secara default, tetapi tersedia jika user memilih.
Skema 5: skema penamaan kernel tradisional yang tidak dapat diprediksi. Skema ini akan digunakan jika semua metode lain gagal (contoh: eth0).

#|ip route
Menampilkan informasi routing
$ ip route
default via 192.168.1.1 dev eth0 proto dhcp src 192.168.1.66 metric 100
192.168.1.0/24 dev eth0 proto kernel scope link src 192.168.1.66
192.168.1.1 dev eth0 proto dhcp scope link src 192.168.1.66 metric 100
Semua paket jaringan yang ditujukan untuk jaringan 192.168.1.1 akan dikirim langsung ke tujuan melalui perangkat eth0. 
Semua paket jaringan yang ditujukan untuk jaringan 192.168.1.0/24 akan dikirim langsung ke tujuan melalui perangkat eth0. 
Semua paket lainnya akan dikirim ke router default yang terletak di 192.168.1.1 dan juga melalui perangkat eth0.

#|ip -6 route
Melihat informasi route table pada IPv6

#|sudo ip addr add 192.168.1.212/24 dev eth0
Menambahkan IP address. Pada perintah di atas, kita memberikan IP address 192.168.1.212 pada perangkat jaringan bernama eth0.

#|sudo ip route add default via 192.168.1.1
Menambahkan gateway IP address sementara

### Menambahkan DNS server address atau nameserver
Untuk menambahkannya secara sementara, kita bisa melakukan pengubahan pada file /etc/resolv.conf dan tambahkan minimal satu baris berisikan DNS server address. Misalnya, bila kita mau menambahkan DNS server dari Google (8.8.8.8 dan 8.8.4.4), penulisannya akan terlihat seperti di bawah ini.
nameserver 8.8.8.8
nameserver 8.8.4.4

#|sudo ip addr flush eth0
Menghapus konfigurasi yang disimpan sementara

###
Network Services 
Konfigurasi Jaringan Permanen
LANJUTIN
###


touch [NAMA] ---> create file
nano [NAMA] ---> akses untuk file
cat [NAMA] ---> keluarkan isi file
sudo apt update ---> update daftar package
sudo apt upgrade ---> upgrade all apt
w -- write
r -- read
x -- execute
chmode ---> change mode (Ubah permission suatu file)
  chmod [option] [ugoa][+-=][rwx] namafile
  ex : chmod u+x latihan1
chown ---> change ownership
  chown user_baru:group_baru namafile
  ex : sudo chown ruby:ruby latihan1
chgrp ---> change group
  chgrp group_baru namafile
  ex : sudo chgrp ruby latihan1
-R ---> Recursive (directory beserta isinya)
